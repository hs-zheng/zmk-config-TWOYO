/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>



/ {

        combos {
                compatible = "zmk,combos";
                combo_uclk {
                        timeout-ms = <1000>;
                        key-positions = <16 19>;
                        layers = <4>;
                        bindings = <&to 0>;
                              };
                };
        
        behaviors {
                altf4: grave_escape {
                        compatible = "zmk,behavior-mod-morph";
                        label = "F_ALTF4";
                        #binding-cells = <0>;
                        bindings = <&kp F>, <&kp LA(F4)>;
                        mods = <(MOD_LALT)>;
                };
        };
        
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | C&C  |  A  |  S  |  D  |  F  |  G  |    |  H  |  J   |  K  |  L  |   ENTER   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   |  ,  |  .  |  LT(3, UP)      |
// | MO_2 | GUI | ALT |  | LT(1,SPC) |      |     LT(1,SPC)      | LFT | DWN  | RT |
                        bindings = <
   &kp TAB  &kp Q &kp W &kp E &kp R &kp T     &kp Y &kp U  &kp I  &kp O  &kp P   &kp BSPC
   &mt LCTL CAPS &kp A  &kp S &kp D &altf4 &kp G        &kp H &kp J  &kp K     &kp L     &kp ENTER
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B        &kp N &kp M  &kp COMMA &kp DOT &lt 3 UP
   &mo 2 &kp LGUI &kp LALT &lt 1 SPC   &lt 1 SPC &kp LEFT &kp DOWN &kp RIGHT
                        >;
                };
                layer_1 {
// -----------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |     |     |     |     |  [  |  ]  |      |
// |     |  6  |  7  |  8  |  9  |  0  |      | PRTS|PGUP |  ;  |  '  |     |           
// |     | -   |  =  |  \  |volup|voldn|       | DEL |PGDN |     |     |     |      
// |     |     |     |                 |         |                 |  /  |     |      |
                        bindings = <
   &kp ESC    &kp NUM_1    &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 &trans  &trans &trans &kp LBKT &kp RBKT &trans
   &trans &kp NUM_6  &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0    &kp PRSC &kp PG_UP  &kp SCLN  &kp QUOT    &trans
   &trans   &kp MINUS      &kp EQL       &kp BSLH       &kp C_VOL_DN       &kp C_VOL_UP   &kp DEL   &kp PG_DN   &trans    &trans    &trans 
   &trans &trans  &trans       &trans                        &trans          &kp FSLH                        &trans &trans
                        >;
                };

                layer_2 {
// -----------------------------------------------------------------------------------------
// | GRV | LFT | DWN |  UP |  RT |      |     |     |     |     |     |     |OUT_TOG|
// |LCTRL| F1  | F2  | F3  | F4  |  F5  |     |     |     |     |     |     |
// | SFT | F6  |  F7 |  F8 | F9  |  F10 |     | F11 | F12 |     |     |     | RSFT  |
// |     |     |     |                  |     |           |     |     |     | TO_4
                        bindings = <
   &kp GRAVE  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans &trans  &trans &trans &trans &out OUT_TOG
   &kp LCTRL &kp F1  &kp F2  &kp F3    &kp F4  &kp F5      &trans &trans &trans &trans  &trans 
   &kp LSHIFT &kp F6    &kp F7  &kp F8    &kp F9    &kp F10      &kp F11    &kp F12    &trans  &trans &kp RSHIFT
   &trans &trans &trans                     &trans          &trans              &trans &trans &to 4
                        >;
                };
                
                layer_3 {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |      |     |     |     |     |     |     |      |
// |     |     |     |     |     |      |     |     |     |     |     |     |
// |     |     |     |     |     |      |     |     |     |     |     |     | 
// |     |     |     |                  |     |           |     |     |     |
                        bindings = <
   &kp LS(GRAVE)  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT    &trans &trans &trans &kp LBRC &kp RBRC &trans 
   &trans &kp CARET  &kp AMPS &kp STAR &kp LPAR &kp RPAR    &trans &trans &kp DQT &kp COLON &kp LS(ENTER)
   &trans &kp UNDER &kp PLUS   &kp PIPE &trans &trans    &trans &trans &kp LS(COMMA) &kp LS(DOT) &trans
   &trans &trans &trans &trans                  &kp LS(SPACE)       &trans &trans &trans
                        >;
                };
                
                layer_4 {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |      |     |     |     |     |     |     |      |
// |     |     |     |     |     |      |     |     |     |     |     |     |
// |     |     |     |     |     |      |     |     |     |     |     |     | 
// |     |     |     |                  |     |           |     |     |     |
                        bindings = <
   &kp ESC &none &none &none &none &none    &none &none &none &none &none &none 
   &none &none &none &none &none &none    &none &none &none &none &none
   &none &none &none &none &none &none    &none &none &none &none &none
   &none &none &none &none                  &none       &none &none &none
                        >;
                };
        };
};
